// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeddingSite.BackEnd.DAL;

#nullable disable

namespace WeddingSite.BackEnd.Migrations
{
    [DbContext(typeof(WeddingSiteDbContext))]
    [Migration("20230113215224_AddedLastFieldsForInvitees")]
    partial class AddedLastFieldsForInvitees
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WeddingSite.BackEnd.DAL.Models.ActiveInvitee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Active")
                        .HasColumnType("datetime2")
                        .HasColumnName("Active");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2")
                        .HasColumnName("Expiration");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FirstName");

                    b.Property<int>("InvitationRefId")
                        .HasColumnType("int")
                        .HasColumnName("InvitationId");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LastName");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RefreshToken");

                    b.HasKey("Id");

                    b.HasIndex("InvitationRefId")
                        .IsUnique();

                    b.ToTable("ActiveInvitees");
                });

            modelBuilder.Entity("WeddingSite.BackEnd.DAL.Models.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GuestId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuestId"), 1L, 1);

                    b.Property<string>("Allergies")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Allergies");

                    b.Property<bool>("Attending")
                        .HasColumnType("bit")
                        .HasColumnName("Attending");

                    b.Property<string>("ChosenMenu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ChosenMenu");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FirstName");

                    b.Property<string>("Intolerances")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Intolerances");

                    b.Property<int>("InvitationRefId")
                        .HasColumnType("int")
                        .HasColumnName("InvitationId");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LastName");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Note");

                    b.HasKey("GuestId");

                    b.HasIndex("InvitationRefId");

                    b.HasIndex("LastName", "FirstName")
                        .IsUnique();

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("WeddingSite.BackEnd.DAL.Models.Invitee", b =>
                {
                    b.Property<int>("InvitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InvitationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvitationId"), 1L, 1);

                    b.Property<bool>("Attending")
                        .HasColumnType("bit")
                        .HasColumnName("Attending");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FirstName");

                    b.Property<int>("GuestsCount")
                        .HasColumnType("int")
                        .HasColumnName("GuestsCount");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LastName");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Note");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Role");

                    b.Property<string>("Welcome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Welcome");

                    b.HasKey("InvitationId");

                    b.HasIndex("LastName", "FirstName")
                        .IsUnique();

                    b.ToTable("Invitees");
                });

            modelBuilder.Entity("WeddingSite.BackEnd.DAL.Models.ActiveInvitee", b =>
                {
                    b.HasOne("WeddingSite.BackEnd.DAL.Models.Invitee", "Invitation")
                        .WithOne("ActiveInvitee")
                        .HasForeignKey("WeddingSite.BackEnd.DAL.Models.ActiveInvitee", "InvitationRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invitation");
                });

            modelBuilder.Entity("WeddingSite.BackEnd.DAL.Models.Guest", b =>
                {
                    b.HasOne("WeddingSite.BackEnd.DAL.Models.Invitee", "Invitation")
                        .WithMany("Guests")
                        .HasForeignKey("InvitationRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invitation");
                });

            modelBuilder.Entity("WeddingSite.BackEnd.DAL.Models.Invitee", b =>
                {
                    b.Navigation("ActiveInvitee");

                    b.Navigation("Guests");
                });
#pragma warning restore 612, 618
        }
    }
}
